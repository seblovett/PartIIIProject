
MotorDriver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003e  00800100  0000097e  00000a12  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000097e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080013e  0080013e  00000a50  2**0
                  ALLOC
  3 .stab         00000c84  00000000  00000000  00000a50  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000001b6  00000000  00000000  000016d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000180  00000000  00000000  00001890  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000013b5  00000000  00000000  00001a10  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008f3  00000000  00000000  00002dc5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ca6  00000000  00000000  000036b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002a4  00000000  00000000  00004360  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003f1  00000000  00000000  00004604  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000962  00000000  00000000  000049f5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00005357  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 c2 00 	jmp	0x184	; 0x184 <__vector_18>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  70:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d0 e1       	ldi	r29, 0x10	; 16
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	ee e7       	ldi	r30, 0x7E	; 126
  90:	f9 e0       	ldi	r31, 0x09	; 9
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	ae 33       	cpi	r26, 0x3E	; 62
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	11 e0       	ldi	r17, 0x01	; 1
  a0:	ae e3       	ldi	r26, 0x3E	; 62
  a2:	b1 e0       	ldi	r27, 0x01	; 1
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	a8 34       	cpi	r26, 0x48	; 72
  aa:	b1 07       	cpc	r27, r17
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 fd 00 	call	0x1fa	; 0x1fa <main>
  b2:	0c 94 bd 04 	jmp	0x97a	; 0x97a <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <PWM_Init>:
#include "Motor.h"

void PWM_Init( void )
{
	//Set clear on Compare, 10 bit PWM
	TCCR1A = (0 << WGM11) | (1 << WGM10) | (1 << COM1A1) | (0 << COM1A0) | (0 << COM1B1) | (0 << COM1B0);
  ba:	81 e8       	ldi	r24, 0x81	; 129
  bc:	80 93 80 00 	sts	0x0080, r24
	TCCR1B = (0 << WGM13) | (1 << WGM12) | (1 << CS12) | (0 << CS11) | (1 << CS10);
  c0:	8d e0       	ldi	r24, 0x0D	; 13
  c2:	80 93 81 00 	sts	0x0081, r24
	OCR1A = TopSpeed;
  c6:	80 91 41 01 	lds	r24, 0x0141
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	90 93 89 00 	sts	0x0089, r25
  d0:	80 93 88 00 	sts	0x0088, r24
}
  d4:	08 95       	ret

000000d6 <ADC_Init>:
void ADC_Init(void)
{
	ADMUX = (0 << REFS1) | (1 << REFS0) ;
  d6:	80 e4       	ldi	r24, 0x40	; 64
  d8:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA = (1 << ADEN) | (0 << ADIE) | (1 << ADSC);
  dc:	80 ec       	ldi	r24, 0xC0	; 192
  de:	80 93 7a 00 	sts	0x007A, r24
}
  e2:	08 95       	ret

000000e4 <ADC_Read>:
uint8_t ADC_Read(void)
{
	ADCSRA |= (1 << ADSC);
  e4:	ea e7       	ldi	r30, 0x7A	; 122
  e6:	f0 e0       	ldi	r31, 0x00	; 0
  e8:	80 81       	ld	r24, Z
  ea:	80 64       	ori	r24, 0x40	; 64
  ec:	80 83       	st	Z, r24
	while ((ADCSRA & (1 << ADIF)) == 0) //wait for the interrupt flag to be high
  ee:	80 81       	ld	r24, Z
  f0:	84 ff       	sbrs	r24, 4
  f2:	fd cf       	rjmp	.-6      	; 0xee <ADC_Read+0xa>
	;
	
	return (uint8_t)(ADC >> 2);
  f4:	80 91 78 00 	lds	r24, 0x0078
  f8:	90 91 79 00 	lds	r25, 0x0079
  fc:	96 95       	lsr	r25
  fe:	87 95       	ror	r24
 100:	96 95       	lsr	r25
 102:	87 95       	ror	r24
}
 104:	08 95       	ret

00000106 <Motor_Init>:

void Motor_Init()
{
	MOTOR_DDR |= (1 << IN1) | (1 << IN2);
 106:	81 b1       	in	r24, 0x01	; 1
 108:	86 60       	ori	r24, 0x06	; 6
 10a:	81 b9       	out	0x01, r24	; 1
	MOTOR_PORT &= ~((1 << IN1) | (1 << IN2));
 10c:	82 b1       	in	r24, 0x02	; 2
 10e:	89 7f       	andi	r24, 0xF9	; 249
 110:	82 b9       	out	0x02, r24	; 2
	
	ADC_Value = 0;
 112:	10 92 3e 01 	sts	0x013E, r1
	Counter = 0;
 116:	10 92 3f 01 	sts	0x013F, r1
	Motor_Threshold = 180;
 11a:	84 eb       	ldi	r24, 0xB4	; 180
 11c:	80 93 40 01 	sts	0x0140, r24
	TopSpeed = 128;
 120:	80 e8       	ldi	r24, 0x80	; 128
 122:	80 93 41 01 	sts	0x0141, r24
	
	PWM_Init();
 126:	0e 94 5d 00 	call	0xba	; 0xba <PWM_Init>
	ADC_Init();
 12a:	0e 94 6b 00 	call	0xd6	; 0xd6 <ADC_Init>
	
	
}
 12e:	08 95       	ret

00000130 <Motor_Go>:
void Motor_Go(uint8_t Direction)
{
	switch (Direction)
 130:	81 30       	cpi	r24, 0x01	; 1
 132:	59 f0       	breq	.+22     	; 0x14a <Motor_Go+0x1a>
 134:	81 30       	cpi	r24, 0x01	; 1
 136:	28 f0       	brcs	.+10     	; 0x142 <Motor_Go+0x12>
 138:	82 30       	cpi	r24, 0x02	; 2
 13a:	51 f0       	breq	.+20     	; 0x150 <Motor_Go+0x20>
 13c:	83 30       	cpi	r24, 0x03	; 3
 13e:	71 f4       	brne	.+28     	; 0x15c <Motor_Go+0x2c>
 140:	0a c0       	rjmp	.+20     	; 0x156 <Motor_Go+0x26>
	{
		case STOP:
			MOTOR_PORT &= ~((1 << IN1) | (1 << IN2));
 142:	82 b1       	in	r24, 0x02	; 2
 144:	89 7f       	andi	r24, 0xF9	; 249
 146:	82 b9       	out	0x02, r24	; 2
			break;
 148:	08 95       	ret
			
		case FORWARD:
			MOTOR_PORT &= ~(1 << IN2);
 14a:	12 98       	cbi	0x02, 2	; 2
			MOTOR_PORT |= (1 << IN1);
 14c:	11 9a       	sbi	0x02, 1	; 2
			break;
 14e:	08 95       	ret
			
		case REVERSE:
			MOTOR_PORT &= ~(1 << IN1);
 150:	11 98       	cbi	0x02, 1	; 2
			MOTOR_PORT |= (1 << IN2);
 152:	12 9a       	sbi	0x02, 2	; 2
			break;
 154:	08 95       	ret
			
		case BREAK:
			MOTOR_PORT |= ((1 << IN1) | (1 << IN2));
 156:	82 b1       	in	r24, 0x02	; 2
 158:	86 60       	ori	r24, 0x06	; 6
 15a:	82 b9       	out	0x02, r24	; 2
 15c:	08 95       	ret

0000015e <Motor_Execute>:
			break;
	}
}
void Motor_Execute()
{
	ADC_Value = ADC_Read();
 15e:	0e 94 72 00 	call	0xe4	; 0xe4 <ADC_Read>
 162:	80 93 3e 01 	sts	0x013E, r24
	if (ADC_Value < Motor_Threshold)
 166:	90 91 40 01 	lds	r25, 0x0140
 16a:	89 17       	cp	r24, r25
 16c:	28 f4       	brcc	.+10     	; 0x178 <Motor_Execute+0x1a>
		Counter ++;
 16e:	80 91 3f 01 	lds	r24, 0x013F
 172:	8f 5f       	subi	r24, 0xFF	; 255
 174:	80 93 3f 01 	sts	0x013F, r24
 178:	08 95       	ret

0000017a <Timer_Init>:
#include <util/delay.h>
static FILE mystdout = FDEV_SETUP_STREAM(Usart_printf, NULL, _FDEV_SETUP_WRITE);

void Timer_Init()
{
	TCCR0B = (1 << CS00);
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	85 bd       	out	0x25, r24	; 37
	TIMSK0 = (1 << TOIE0);
 17e:	80 93 6e 00 	sts	0x006E, r24
	
}
 182:	08 95       	ret

00000184 <__vector_18>:
ISR(TIMER0_OVF_vect)
{
 184:	1f 92       	push	r1
 186:	0f 92       	push	r0
 188:	0f b6       	in	r0, 0x3f	; 63
 18a:	0f 92       	push	r0
 18c:	11 24       	eor	r1, r1
 18e:	2f 93       	push	r18
 190:	3f 93       	push	r19
 192:	4f 93       	push	r20
 194:	5f 93       	push	r21
 196:	6f 93       	push	r22
 198:	7f 93       	push	r23
 19a:	8f 93       	push	r24
 19c:	9f 93       	push	r25
 19e:	af 93       	push	r26
 1a0:	bf 93       	push	r27
 1a2:	ef 93       	push	r30
 1a4:	ff 93       	push	r31
	Motor_Execute();
 1a6:	0e 94 af 00 	call	0x15e	; 0x15e <Motor_Execute>
	printf("Counter = %d\n", Counter);
 1aa:	00 d0       	rcall	.+0      	; 0x1ac <__vector_18+0x28>
 1ac:	00 d0       	rcall	.+0      	; 0x1ae <__vector_18+0x2a>
 1ae:	ed b7       	in	r30, 0x3d	; 61
 1b0:	fe b7       	in	r31, 0x3e	; 62
 1b2:	31 96       	adiw	r30, 0x01	; 1
 1b4:	80 e0       	ldi	r24, 0x00	; 0
 1b6:	91 e0       	ldi	r25, 0x01	; 1
 1b8:	ad b7       	in	r26, 0x3d	; 61
 1ba:	be b7       	in	r27, 0x3e	; 62
 1bc:	12 96       	adiw	r26, 0x02	; 2
 1be:	9c 93       	st	X, r25
 1c0:	8e 93       	st	-X, r24
 1c2:	11 97       	sbiw	r26, 0x01	; 1
 1c4:	80 91 3f 01 	lds	r24, 0x013F
 1c8:	82 83       	std	Z+2, r24	; 0x02
 1ca:	13 82       	std	Z+3, r1	; 0x03
 1cc:	0e 94 c5 01 	call	0x38a	; 0x38a <printf>
 1d0:	0f 90       	pop	r0
 1d2:	0f 90       	pop	r0
 1d4:	0f 90       	pop	r0
 1d6:	0f 90       	pop	r0
}
 1d8:	ff 91       	pop	r31
 1da:	ef 91       	pop	r30
 1dc:	bf 91       	pop	r27
 1de:	af 91       	pop	r26
 1e0:	9f 91       	pop	r25
 1e2:	8f 91       	pop	r24
 1e4:	7f 91       	pop	r23
 1e6:	6f 91       	pop	r22
 1e8:	5f 91       	pop	r21
 1ea:	4f 91       	pop	r20
 1ec:	3f 91       	pop	r19
 1ee:	2f 91       	pop	r18
 1f0:	0f 90       	pop	r0
 1f2:	0f be       	out	0x3f, r0	; 63
 1f4:	0f 90       	pop	r0
 1f6:	1f 90       	pop	r1
 1f8:	18 95       	reti

000001fa <main>:
int main(void)
{
 1fa:	cf 93       	push	r28
 1fc:	df 93       	push	r29
 1fe:	cd b7       	in	r28, 0x3d	; 61
 200:	de b7       	in	r29, 0x3e	; 62
 202:	64 97       	sbiw	r28, 0x14	; 20
 204:	0f b6       	in	r0, 0x3f	; 63
 206:	f8 94       	cli
 208:	de bf       	out	0x3e, r29	; 62
 20a:	0f be       	out	0x3f, r0	; 63
 20c:	cd bf       	out	0x3d, r28	; 61
	stdout = &mystdout;
 20e:	80 e3       	ldi	r24, 0x30	; 48
 210:	91 e0       	ldi	r25, 0x01	; 1
 212:	90 93 45 01 	sts	0x0145, r25
 216:	80 93 44 01 	sts	0x0144, r24
	USART0_Init();
 21a:	0e 94 5d 01 	call	0x2ba	; 0x2ba <USART0_Init>
	printf("Hello\n\n");
 21e:	8e e0       	ldi	r24, 0x0E	; 14
 220:	91 e0       	ldi	r25, 0x01	; 1
 222:	0e 94 da 01 	call	0x3b4	; 0x3b4 <puts>
	DDRD = 0xFF;
 226:	8f ef       	ldi	r24, 0xFF	; 255
 228:	8a b9       	out	0x0a, r24	; 10
	Motor_Init();
 22a:	0e 94 83 00 	call	0x106	; 0x106 <Motor_Init>
	Timer_Init();
 22e:	0e 94 bd 00 	call	0x17a	; 0x17a <Timer_Init>
	sei();
 232:	78 94       	sei
				printf("Forward\n");
				Motor_Go(FORWARD);
				break;
				
			case 'R':
				printf("Reverse\n");
 234:	0d e1       	ldi	r16, 0x1D	; 29
 236:	11 e0       	ldi	r17, 0x01	; 1
				printf("Break\n");
				Motor_Go(BREAK);
				break;
			
			case 'S':
				printf("Stop\n");
 238:	0f 2e       	mov	r0, r31
 23a:	fb e2       	ldi	r31, 0x2B	; 43
 23c:	ef 2e       	mov	r14, r31
 23e:	f1 e0       	ldi	r31, 0x01	; 1
 240:	ff 2e       	mov	r15, r31
 242:	f0 2d       	mov	r31, r0
				printf("Reverse\n");
				Motor_Go(REVERSE);
				break;
			
			case 'B':
				printf("Break\n");
 244:	0f 2e       	mov	r0, r31
 246:	f5 e2       	ldi	r31, 0x25	; 37
 248:	cf 2e       	mov	r12, r31
 24a:	f1 e0       	ldi	r31, 0x01	; 1
 24c:	df 2e       	mov	r13, r31
 24e:	f0 2d       	mov	r31, r0
// 		_delay_ms(50);
		Usart_get_line(&buff, 20);
		switch(buff[0])
		{
			case 'F':
				printf("Forward\n");
 250:	0f 2e       	mov	r0, r31
 252:	f5 e1       	ldi	r31, 0x15	; 21
 254:	af 2e       	mov	r10, r31
 256:	f1 e0       	ldi	r31, 0x01	; 1
 258:	bf 2e       	mov	r11, r31
 25a:	f0 2d       	mov	r31, r0
    while(1)
    {
// 		Motor_Execute();
// 		printf("Counter = %d\n", Counter);
// 		_delay_ms(50);
		Usart_get_line(&buff, 20);
 25c:	ce 01       	movw	r24, r28
 25e:	01 96       	adiw	r24, 0x01	; 1
 260:	64 e1       	ldi	r22, 0x14	; 20
 262:	70 e0       	ldi	r23, 0x00	; 0
 264:	0e 94 87 01 	call	0x30e	; 0x30e <Usart_get_line>
		switch(buff[0])
 268:	89 81       	ldd	r24, Y+1	; 0x01
 26a:	86 34       	cpi	r24, 0x46	; 70
 26c:	51 f0       	breq	.+20     	; 0x282 <main+0x88>
 26e:	87 34       	cpi	r24, 0x47	; 71
 270:	18 f4       	brcc	.+6      	; 0x278 <main+0x7e>
 272:	82 34       	cpi	r24, 0x42	; 66
 274:	99 f7       	brne	.-26     	; 0x25c <main+0x62>
 276:	13 c0       	rjmp	.+38     	; 0x29e <main+0xa4>
 278:	82 35       	cpi	r24, 0x52	; 82
 27a:	51 f0       	breq	.+20     	; 0x290 <main+0x96>
 27c:	83 35       	cpi	r24, 0x53	; 83
 27e:	71 f7       	brne	.-36     	; 0x25c <main+0x62>
 280:	15 c0       	rjmp	.+42     	; 0x2ac <main+0xb2>
		{
			case 'F':
				printf("Forward\n");
 282:	c5 01       	movw	r24, r10
 284:	0e 94 da 01 	call	0x3b4	; 0x3b4 <puts>
				Motor_Go(FORWARD);
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	0e 94 98 00 	call	0x130	; 0x130 <Motor_Go>
				break;
 28e:	e6 cf       	rjmp	.-52     	; 0x25c <main+0x62>
				
			case 'R':
				printf("Reverse\n");
 290:	c8 01       	movw	r24, r16
 292:	0e 94 da 01 	call	0x3b4	; 0x3b4 <puts>
				Motor_Go(REVERSE);
 296:	82 e0       	ldi	r24, 0x02	; 2
 298:	0e 94 98 00 	call	0x130	; 0x130 <Motor_Go>
				break;
 29c:	df cf       	rjmp	.-66     	; 0x25c <main+0x62>
			
			case 'B':
				printf("Break\n");
 29e:	c6 01       	movw	r24, r12
 2a0:	0e 94 da 01 	call	0x3b4	; 0x3b4 <puts>
				Motor_Go(BREAK);
 2a4:	83 e0       	ldi	r24, 0x03	; 3
 2a6:	0e 94 98 00 	call	0x130	; 0x130 <Motor_Go>
				break;
 2aa:	d8 cf       	rjmp	.-80     	; 0x25c <main+0x62>
			
			case 'S':
				printf("Stop\n");
 2ac:	c7 01       	movw	r24, r14
 2ae:	0e 94 da 01 	call	0x3b4	; 0x3b4 <puts>
				Motor_Go(STOP);
 2b2:	80 e0       	ldi	r24, 0x00	; 0
 2b4:	0e 94 98 00 	call	0x130	; 0x130 <Motor_Go>
				break;
 2b8:	d1 cf       	rjmp	.-94     	; 0x25c <main+0x62>

000002ba <USART0_Init>:

void USART0_Init()
{
	uint16_t ubrr = UBBR;
	//Set baud rate
	UBRR0H = (unsigned char)(ubrr >>8);
 2ba:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = (unsigned char)ubrr ;
 2be:	8c e0       	ldi	r24, 0x0C	; 12
 2c0:	80 93 c4 00 	sts	0x00C4, r24
	//Enable receiver and transmitter
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 2c4:	88 e1       	ldi	r24, 0x18	; 24
 2c6:	80 93 c1 00 	sts	0x00C1, r24
	
	UCSR0C = 0x06; //set asynchronous, no parity, one stop bit, 8 bit transfer.
 2ca:	86 e0       	ldi	r24, 0x06	; 6
 2cc:	80 93 c2 00 	sts	0x00C2, r24
	
	//UCSR0B |= (1 << RXCIE0) | (1 << TXCIE0); //set RX and TX interrupt on
}
 2d0:	08 95       	ret

000002d2 <Usart_SendChar>:
void Usart_SendChar(char data) 
{
    // Wait for empty transmit buffer
    while ( !(UCSR0A & (1 << UDRE0)) );
 2d2:	e0 ec       	ldi	r30, 0xC0	; 192
 2d4:	f0 e0       	ldi	r31, 0x00	; 0
 2d6:	90 81       	ld	r25, Z
 2d8:	95 ff       	sbrs	r25, 5
 2da:	fd cf       	rjmp	.-6      	; 0x2d6 <Usart_SendChar+0x4>
    // Start transmission
    UDR0 = data; 
 2dc:	80 93 c6 00 	sts	0x00C6, r24
}
 2e0:	08 95       	ret

000002e2 <Usart_Receive>:
unsigned char Usart_Receive( void )
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) )
 2e2:	e0 ec       	ldi	r30, 0xC0	; 192
 2e4:	f0 e0       	ldi	r31, 0x00	; 0
 2e6:	80 81       	ld	r24, Z
 2e8:	88 23       	and	r24, r24
 2ea:	ec f7       	brge	.-6      	; 0x2e6 <Usart_Receive+0x4>
	;
	/* Get and return received data from buffer */
	//Usart_SendChar(UDR0);
	return UDR0;
 2ec:	80 91 c6 00 	lds	r24, 0x00C6
}
 2f0:	08 95       	ret

000002f2 <Usart_printf>:
//to use this copy the following as a global- 
//		static FILE mystdout = FDEV_SETUP_STREAM(Usart_printf, NULL, _FDEV_SETUP_WRITE);
// and add this line at the beginning of main:
//		stdout = &mystdout;
//	stdio.h must be used.
int Usart_printf(char var, FILE *stream) {
 2f2:	cf 93       	push	r28
 2f4:	c8 2f       	mov	r28, r24
    // translate \n to \r for br@y++ terminal
    if (var == '\n') Usart_SendChar('\r');
 2f6:	8a 30       	cpi	r24, 0x0A	; 10
 2f8:	19 f4       	brne	.+6      	; 0x300 <Usart_printf+0xe>
 2fa:	8d e0       	ldi	r24, 0x0D	; 13
 2fc:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Usart_SendChar>
    Usart_SendChar(var);
 300:	8c 2f       	mov	r24, r28
 302:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Usart_SendChar>
    return 0;
}
 306:	80 e0       	ldi	r24, 0x00	; 0
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	cf 91       	pop	r28
 30c:	08 95       	ret

0000030e <Usart_get_line>:

void Usart_get_line (char *buff, int len)
{
 30e:	ef 92       	push	r14
 310:	ff 92       	push	r15
 312:	0f 93       	push	r16
 314:	1f 93       	push	r17
 316:	cf 93       	push	r28
 318:	df 93       	push	r29
 31a:	7c 01       	movw	r14, r24
	cli();
 31c:	f8 94       	cli
	char c;
	int i = 0;
 31e:	c0 e0       	ldi	r28, 0x00	; 0
 320:	d0 e0       	ldi	r29, 0x00	; 0
		if ((c == '\b') && i) {
			i--;
			Usart_SendChar(c);
			continue;
		}
		if (c >= ' ' && i < len - 1) {	/* Visible chars */
 322:	8b 01       	movw	r16, r22
 324:	01 50       	subi	r16, 0x01	; 1
 326:	10 40       	sbci	r17, 0x00	; 0
	char c;
	int i = 0;


	for (;;) {
		c = Usart_Receive();
 328:	0e 94 71 01 	call	0x2e2	; 0x2e2 <Usart_Receive>
		if (c == '\r') break;
 32c:	8d 30       	cpi	r24, 0x0D	; 13
 32e:	a9 f0       	breq	.+42     	; 0x35a <Usart_get_line+0x4c>
		if ((c == '\b') && i) {
 330:	88 30       	cpi	r24, 0x08	; 8
 332:	31 f4       	brne	.+12     	; 0x340 <Usart_get_line+0x32>
 334:	20 97       	sbiw	r28, 0x00	; 0
 336:	c1 f3       	breq	.-16     	; 0x328 <Usart_get_line+0x1a>
			i--;
 338:	21 97       	sbiw	r28, 0x01	; 1
			Usart_SendChar(c);
 33a:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Usart_SendChar>
			continue;
 33e:	f4 cf       	rjmp	.-24     	; 0x328 <Usart_get_line+0x1a>
		}
		if (c >= ' ' && i < len - 1) {	/* Visible chars */
 340:	80 32       	cpi	r24, 0x20	; 32
 342:	90 f3       	brcs	.-28     	; 0x328 <Usart_get_line+0x1a>
 344:	c0 17       	cp	r28, r16
 346:	d1 07       	cpc	r29, r17
 348:	7c f7       	brge	.-34     	; 0x328 <Usart_get_line+0x1a>
			buff[i++] = c;
 34a:	f7 01       	movw	r30, r14
 34c:	ec 0f       	add	r30, r28
 34e:	fd 1f       	adc	r31, r29
 350:	80 83       	st	Z, r24
 352:	21 96       	adiw	r28, 0x01	; 1
			Usart_SendChar(c);
 354:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Usart_SendChar>
 358:	e7 cf       	rjmp	.-50     	; 0x328 <Usart_get_line+0x1a>
		}
	}
	buff[i] = 0;
 35a:	ce 0d       	add	r28, r14
 35c:	df 1d       	adc	r29, r15
 35e:	18 82       	st	Y, r1
	Usart_SendChar('\n');
 360:	8a e0       	ldi	r24, 0x0A	; 10
 362:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Usart_SendChar>
	sei();
 366:	78 94       	sei
}
 368:	df 91       	pop	r29
 36a:	cf 91       	pop	r28
 36c:	1f 91       	pop	r17
 36e:	0f 91       	pop	r16
 370:	ff 90       	pop	r15
 372:	ef 90       	pop	r14
 374:	08 95       	ret

00000376 <USART0_Senduint16>:
void USART0_Senduint16 (uint16_t Data)
{
 376:	cf 93       	push	r28
 378:	c8 2f       	mov	r28, r24
	Usart_SendChar(Data >> 8);
 37a:	89 2f       	mov	r24, r25
 37c:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Usart_SendChar>
	Usart_SendChar(Data & 0xFF);
 380:	8c 2f       	mov	r24, r28
 382:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Usart_SendChar>
 386:	cf 91       	pop	r28
 388:	08 95       	ret

0000038a <printf>:
 38a:	a0 e0       	ldi	r26, 0x00	; 0
 38c:	b0 e0       	ldi	r27, 0x00	; 0
 38e:	eb ec       	ldi	r30, 0xCB	; 203
 390:	f1 e0       	ldi	r31, 0x01	; 1
 392:	0c 94 96 04 	jmp	0x92c	; 0x92c <__prologue_saves__+0x20>
 396:	fe 01       	movw	r30, r28
 398:	35 96       	adiw	r30, 0x05	; 5
 39a:	61 91       	ld	r22, Z+
 39c:	71 91       	ld	r23, Z+
 39e:	80 91 44 01 	lds	r24, 0x0144
 3a2:	90 91 45 01 	lds	r25, 0x0145
 3a6:	af 01       	movw	r20, r30
 3a8:	0e 94 08 02 	call	0x410	; 0x410 <vfprintf>
 3ac:	20 96       	adiw	r28, 0x00	; 0
 3ae:	e2 e0       	ldi	r30, 0x02	; 2
 3b0:	0c 94 b2 04 	jmp	0x964	; 0x964 <__epilogue_restores__+0x20>

000003b4 <puts>:
 3b4:	0f 93       	push	r16
 3b6:	1f 93       	push	r17
 3b8:	cf 93       	push	r28
 3ba:	df 93       	push	r29
 3bc:	8c 01       	movw	r16, r24
 3be:	e0 91 44 01 	lds	r30, 0x0144
 3c2:	f0 91 45 01 	lds	r31, 0x0145
 3c6:	83 81       	ldd	r24, Z+3	; 0x03
 3c8:	81 ff       	sbrs	r24, 1
 3ca:	1a c0       	rjmp	.+52     	; 0x400 <puts+0x4c>
 3cc:	c0 e0       	ldi	r28, 0x00	; 0
 3ce:	d0 e0       	ldi	r29, 0x00	; 0
 3d0:	05 c0       	rjmp	.+10     	; 0x3dc <puts+0x28>
 3d2:	09 95       	icall
 3d4:	00 97       	sbiw	r24, 0x00	; 0
 3d6:	11 f0       	breq	.+4      	; 0x3dc <puts+0x28>
 3d8:	cf ef       	ldi	r28, 0xFF	; 255
 3da:	df ef       	ldi	r29, 0xFF	; 255
 3dc:	f8 01       	movw	r30, r16
 3de:	81 91       	ld	r24, Z+
 3e0:	8f 01       	movw	r16, r30
 3e2:	60 91 44 01 	lds	r22, 0x0144
 3e6:	70 91 45 01 	lds	r23, 0x0145
 3ea:	db 01       	movw	r26, r22
 3ec:	18 96       	adiw	r26, 0x08	; 8
 3ee:	ed 91       	ld	r30, X+
 3f0:	fc 91       	ld	r31, X
 3f2:	19 97       	sbiw	r26, 0x09	; 9
 3f4:	88 23       	and	r24, r24
 3f6:	69 f7       	brne	.-38     	; 0x3d2 <puts+0x1e>
 3f8:	8a e0       	ldi	r24, 0x0A	; 10
 3fa:	09 95       	icall
 3fc:	00 97       	sbiw	r24, 0x00	; 0
 3fe:	11 f0       	breq	.+4      	; 0x404 <puts+0x50>
 400:	cf ef       	ldi	r28, 0xFF	; 255
 402:	df ef       	ldi	r29, 0xFF	; 255
 404:	ce 01       	movw	r24, r28
 406:	df 91       	pop	r29
 408:	cf 91       	pop	r28
 40a:	1f 91       	pop	r17
 40c:	0f 91       	pop	r16
 40e:	08 95       	ret

00000410 <vfprintf>:
 410:	ad e0       	ldi	r26, 0x0D	; 13
 412:	b0 e0       	ldi	r27, 0x00	; 0
 414:	ee e0       	ldi	r30, 0x0E	; 14
 416:	f2 e0       	ldi	r31, 0x02	; 2
 418:	0c 94 86 04 	jmp	0x90c	; 0x90c <__prologue_saves__>
 41c:	3c 01       	movw	r6, r24
 41e:	7d 87       	std	Y+13, r23	; 0x0d
 420:	6c 87       	std	Y+12, r22	; 0x0c
 422:	5a 01       	movw	r10, r20
 424:	fc 01       	movw	r30, r24
 426:	17 82       	std	Z+7, r1	; 0x07
 428:	16 82       	std	Z+6, r1	; 0x06
 42a:	83 81       	ldd	r24, Z+3	; 0x03
 42c:	81 ff       	sbrs	r24, 1
 42e:	c8 c1       	rjmp	.+912    	; 0x7c0 <vfprintf+0x3b0>
 430:	2e 01       	movw	r4, r28
 432:	08 94       	sec
 434:	41 1c       	adc	r4, r1
 436:	51 1c       	adc	r5, r1
 438:	f3 01       	movw	r30, r6
 43a:	93 81       	ldd	r25, Z+3	; 0x03
 43c:	ec 85       	ldd	r30, Y+12	; 0x0c
 43e:	fd 85       	ldd	r31, Y+13	; 0x0d
 440:	93 fd       	sbrc	r25, 3
 442:	85 91       	lpm	r24, Z+
 444:	93 ff       	sbrs	r25, 3
 446:	81 91       	ld	r24, Z+
 448:	fd 87       	std	Y+13, r31	; 0x0d
 44a:	ec 87       	std	Y+12, r30	; 0x0c
 44c:	88 23       	and	r24, r24
 44e:	09 f4       	brne	.+2      	; 0x452 <vfprintf+0x42>
 450:	b3 c1       	rjmp	.+870    	; 0x7b8 <vfprintf+0x3a8>
 452:	85 32       	cpi	r24, 0x25	; 37
 454:	41 f4       	brne	.+16     	; 0x466 <vfprintf+0x56>
 456:	93 fd       	sbrc	r25, 3
 458:	85 91       	lpm	r24, Z+
 45a:	93 ff       	sbrs	r25, 3
 45c:	81 91       	ld	r24, Z+
 45e:	fd 87       	std	Y+13, r31	; 0x0d
 460:	ec 87       	std	Y+12, r30	; 0x0c
 462:	85 32       	cpi	r24, 0x25	; 37
 464:	29 f4       	brne	.+10     	; 0x470 <vfprintf+0x60>
 466:	90 e0       	ldi	r25, 0x00	; 0
 468:	b3 01       	movw	r22, r6
 46a:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <fputc>
 46e:	e4 cf       	rjmp	.-56     	; 0x438 <vfprintf+0x28>
 470:	ff 24       	eor	r15, r15
 472:	ee 24       	eor	r14, r14
 474:	10 e0       	ldi	r17, 0x00	; 0
 476:	10 32       	cpi	r17, 0x20	; 32
 478:	b0 f4       	brcc	.+44     	; 0x4a6 <vfprintf+0x96>
 47a:	8b 32       	cpi	r24, 0x2B	; 43
 47c:	69 f0       	breq	.+26     	; 0x498 <vfprintf+0x88>
 47e:	8c 32       	cpi	r24, 0x2C	; 44
 480:	28 f4       	brcc	.+10     	; 0x48c <vfprintf+0x7c>
 482:	80 32       	cpi	r24, 0x20	; 32
 484:	51 f0       	breq	.+20     	; 0x49a <vfprintf+0x8a>
 486:	83 32       	cpi	r24, 0x23	; 35
 488:	71 f4       	brne	.+28     	; 0x4a6 <vfprintf+0x96>
 48a:	0b c0       	rjmp	.+22     	; 0x4a2 <vfprintf+0x92>
 48c:	8d 32       	cpi	r24, 0x2D	; 45
 48e:	39 f0       	breq	.+14     	; 0x49e <vfprintf+0x8e>
 490:	80 33       	cpi	r24, 0x30	; 48
 492:	49 f4       	brne	.+18     	; 0x4a6 <vfprintf+0x96>
 494:	11 60       	ori	r17, 0x01	; 1
 496:	2c c0       	rjmp	.+88     	; 0x4f0 <vfprintf+0xe0>
 498:	12 60       	ori	r17, 0x02	; 2
 49a:	14 60       	ori	r17, 0x04	; 4
 49c:	29 c0       	rjmp	.+82     	; 0x4f0 <vfprintf+0xe0>
 49e:	18 60       	ori	r17, 0x08	; 8
 4a0:	27 c0       	rjmp	.+78     	; 0x4f0 <vfprintf+0xe0>
 4a2:	10 61       	ori	r17, 0x10	; 16
 4a4:	25 c0       	rjmp	.+74     	; 0x4f0 <vfprintf+0xe0>
 4a6:	17 fd       	sbrc	r17, 7
 4a8:	2e c0       	rjmp	.+92     	; 0x506 <vfprintf+0xf6>
 4aa:	28 2f       	mov	r18, r24
 4ac:	20 53       	subi	r18, 0x30	; 48
 4ae:	2a 30       	cpi	r18, 0x0A	; 10
 4b0:	98 f4       	brcc	.+38     	; 0x4d8 <vfprintf+0xc8>
 4b2:	16 ff       	sbrs	r17, 6
 4b4:	08 c0       	rjmp	.+16     	; 0x4c6 <vfprintf+0xb6>
 4b6:	8f 2d       	mov	r24, r15
 4b8:	88 0f       	add	r24, r24
 4ba:	f8 2e       	mov	r15, r24
 4bc:	ff 0c       	add	r15, r15
 4be:	ff 0c       	add	r15, r15
 4c0:	f8 0e       	add	r15, r24
 4c2:	f2 0e       	add	r15, r18
 4c4:	15 c0       	rjmp	.+42     	; 0x4f0 <vfprintf+0xe0>
 4c6:	8e 2d       	mov	r24, r14
 4c8:	88 0f       	add	r24, r24
 4ca:	e8 2e       	mov	r14, r24
 4cc:	ee 0c       	add	r14, r14
 4ce:	ee 0c       	add	r14, r14
 4d0:	e8 0e       	add	r14, r24
 4d2:	e2 0e       	add	r14, r18
 4d4:	10 62       	ori	r17, 0x20	; 32
 4d6:	0c c0       	rjmp	.+24     	; 0x4f0 <vfprintf+0xe0>
 4d8:	8e 32       	cpi	r24, 0x2E	; 46
 4da:	21 f4       	brne	.+8      	; 0x4e4 <vfprintf+0xd4>
 4dc:	16 fd       	sbrc	r17, 6
 4de:	6c c1       	rjmp	.+728    	; 0x7b8 <vfprintf+0x3a8>
 4e0:	10 64       	ori	r17, 0x40	; 64
 4e2:	06 c0       	rjmp	.+12     	; 0x4f0 <vfprintf+0xe0>
 4e4:	8c 36       	cpi	r24, 0x6C	; 108
 4e6:	11 f4       	brne	.+4      	; 0x4ec <vfprintf+0xdc>
 4e8:	10 68       	ori	r17, 0x80	; 128
 4ea:	02 c0       	rjmp	.+4      	; 0x4f0 <vfprintf+0xe0>
 4ec:	88 36       	cpi	r24, 0x68	; 104
 4ee:	59 f4       	brne	.+22     	; 0x506 <vfprintf+0xf6>
 4f0:	ec 85       	ldd	r30, Y+12	; 0x0c
 4f2:	fd 85       	ldd	r31, Y+13	; 0x0d
 4f4:	93 fd       	sbrc	r25, 3
 4f6:	85 91       	lpm	r24, Z+
 4f8:	93 ff       	sbrs	r25, 3
 4fa:	81 91       	ld	r24, Z+
 4fc:	fd 87       	std	Y+13, r31	; 0x0d
 4fe:	ec 87       	std	Y+12, r30	; 0x0c
 500:	88 23       	and	r24, r24
 502:	09 f0       	breq	.+2      	; 0x506 <vfprintf+0xf6>
 504:	b8 cf       	rjmp	.-144    	; 0x476 <vfprintf+0x66>
 506:	98 2f       	mov	r25, r24
 508:	95 54       	subi	r25, 0x45	; 69
 50a:	93 30       	cpi	r25, 0x03	; 3
 50c:	18 f0       	brcs	.+6      	; 0x514 <vfprintf+0x104>
 50e:	90 52       	subi	r25, 0x20	; 32
 510:	93 30       	cpi	r25, 0x03	; 3
 512:	38 f4       	brcc	.+14     	; 0x522 <vfprintf+0x112>
 514:	24 e0       	ldi	r18, 0x04	; 4
 516:	30 e0       	ldi	r19, 0x00	; 0
 518:	a2 0e       	add	r10, r18
 51a:	b3 1e       	adc	r11, r19
 51c:	3f e3       	ldi	r19, 0x3F	; 63
 51e:	39 83       	std	Y+1, r19	; 0x01
 520:	0f c0       	rjmp	.+30     	; 0x540 <vfprintf+0x130>
 522:	83 36       	cpi	r24, 0x63	; 99
 524:	31 f0       	breq	.+12     	; 0x532 <vfprintf+0x122>
 526:	83 37       	cpi	r24, 0x73	; 115
 528:	81 f0       	breq	.+32     	; 0x54a <vfprintf+0x13a>
 52a:	83 35       	cpi	r24, 0x53	; 83
 52c:	09 f0       	breq	.+2      	; 0x530 <vfprintf+0x120>
 52e:	5a c0       	rjmp	.+180    	; 0x5e4 <vfprintf+0x1d4>
 530:	22 c0       	rjmp	.+68     	; 0x576 <vfprintf+0x166>
 532:	f5 01       	movw	r30, r10
 534:	80 81       	ld	r24, Z
 536:	89 83       	std	Y+1, r24	; 0x01
 538:	22 e0       	ldi	r18, 0x02	; 2
 53a:	30 e0       	ldi	r19, 0x00	; 0
 53c:	a2 0e       	add	r10, r18
 53e:	b3 1e       	adc	r11, r19
 540:	21 e0       	ldi	r18, 0x01	; 1
 542:	c2 2e       	mov	r12, r18
 544:	d1 2c       	mov	r13, r1
 546:	42 01       	movw	r8, r4
 548:	14 c0       	rjmp	.+40     	; 0x572 <vfprintf+0x162>
 54a:	92 e0       	ldi	r25, 0x02	; 2
 54c:	29 2e       	mov	r2, r25
 54e:	31 2c       	mov	r3, r1
 550:	2a 0c       	add	r2, r10
 552:	3b 1c       	adc	r3, r11
 554:	f5 01       	movw	r30, r10
 556:	80 80       	ld	r8, Z
 558:	91 80       	ldd	r9, Z+1	; 0x01
 55a:	16 ff       	sbrs	r17, 6
 55c:	03 c0       	rjmp	.+6      	; 0x564 <vfprintf+0x154>
 55e:	6f 2d       	mov	r22, r15
 560:	70 e0       	ldi	r23, 0x00	; 0
 562:	02 c0       	rjmp	.+4      	; 0x568 <vfprintf+0x158>
 564:	6f ef       	ldi	r22, 0xFF	; 255
 566:	7f ef       	ldi	r23, 0xFF	; 255
 568:	c4 01       	movw	r24, r8
 56a:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <strnlen>
 56e:	6c 01       	movw	r12, r24
 570:	51 01       	movw	r10, r2
 572:	1f 77       	andi	r17, 0x7F	; 127
 574:	15 c0       	rjmp	.+42     	; 0x5a0 <vfprintf+0x190>
 576:	82 e0       	ldi	r24, 0x02	; 2
 578:	28 2e       	mov	r2, r24
 57a:	31 2c       	mov	r3, r1
 57c:	2a 0c       	add	r2, r10
 57e:	3b 1c       	adc	r3, r11
 580:	f5 01       	movw	r30, r10
 582:	80 80       	ld	r8, Z
 584:	91 80       	ldd	r9, Z+1	; 0x01
 586:	16 ff       	sbrs	r17, 6
 588:	03 c0       	rjmp	.+6      	; 0x590 <vfprintf+0x180>
 58a:	6f 2d       	mov	r22, r15
 58c:	70 e0       	ldi	r23, 0x00	; 0
 58e:	02 c0       	rjmp	.+4      	; 0x594 <vfprintf+0x184>
 590:	6f ef       	ldi	r22, 0xFF	; 255
 592:	7f ef       	ldi	r23, 0xFF	; 255
 594:	c4 01       	movw	r24, r8
 596:	0e 94 e6 03 	call	0x7cc	; 0x7cc <strnlen_P>
 59a:	6c 01       	movw	r12, r24
 59c:	10 68       	ori	r17, 0x80	; 128
 59e:	51 01       	movw	r10, r2
 5a0:	13 fd       	sbrc	r17, 3
 5a2:	1c c0       	rjmp	.+56     	; 0x5dc <vfprintf+0x1cc>
 5a4:	06 c0       	rjmp	.+12     	; 0x5b2 <vfprintf+0x1a2>
 5a6:	80 e2       	ldi	r24, 0x20	; 32
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	b3 01       	movw	r22, r6
 5ac:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <fputc>
 5b0:	ea 94       	dec	r14
 5b2:	8e 2d       	mov	r24, r14
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	c8 16       	cp	r12, r24
 5b8:	d9 06       	cpc	r13, r25
 5ba:	a8 f3       	brcs	.-22     	; 0x5a6 <vfprintf+0x196>
 5bc:	0f c0       	rjmp	.+30     	; 0x5dc <vfprintf+0x1cc>
 5be:	f4 01       	movw	r30, r8
 5c0:	17 fd       	sbrc	r17, 7
 5c2:	85 91       	lpm	r24, Z+
 5c4:	17 ff       	sbrs	r17, 7
 5c6:	81 91       	ld	r24, Z+
 5c8:	4f 01       	movw	r8, r30
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	b3 01       	movw	r22, r6
 5ce:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <fputc>
 5d2:	e1 10       	cpse	r14, r1
 5d4:	ea 94       	dec	r14
 5d6:	08 94       	sec
 5d8:	c1 08       	sbc	r12, r1
 5da:	d1 08       	sbc	r13, r1
 5dc:	c1 14       	cp	r12, r1
 5de:	d1 04       	cpc	r13, r1
 5e0:	71 f7       	brne	.-36     	; 0x5be <vfprintf+0x1ae>
 5e2:	e7 c0       	rjmp	.+462    	; 0x7b2 <vfprintf+0x3a2>
 5e4:	84 36       	cpi	r24, 0x64	; 100
 5e6:	11 f0       	breq	.+4      	; 0x5ec <vfprintf+0x1dc>
 5e8:	89 36       	cpi	r24, 0x69	; 105
 5ea:	51 f5       	brne	.+84     	; 0x640 <vfprintf+0x230>
 5ec:	f5 01       	movw	r30, r10
 5ee:	17 ff       	sbrs	r17, 7
 5f0:	07 c0       	rjmp	.+14     	; 0x600 <vfprintf+0x1f0>
 5f2:	80 81       	ld	r24, Z
 5f4:	91 81       	ldd	r25, Z+1	; 0x01
 5f6:	a2 81       	ldd	r26, Z+2	; 0x02
 5f8:	b3 81       	ldd	r27, Z+3	; 0x03
 5fa:	24 e0       	ldi	r18, 0x04	; 4
 5fc:	30 e0       	ldi	r19, 0x00	; 0
 5fe:	08 c0       	rjmp	.+16     	; 0x610 <vfprintf+0x200>
 600:	80 81       	ld	r24, Z
 602:	91 81       	ldd	r25, Z+1	; 0x01
 604:	aa 27       	eor	r26, r26
 606:	97 fd       	sbrc	r25, 7
 608:	a0 95       	com	r26
 60a:	ba 2f       	mov	r27, r26
 60c:	22 e0       	ldi	r18, 0x02	; 2
 60e:	30 e0       	ldi	r19, 0x00	; 0
 610:	a2 0e       	add	r10, r18
 612:	b3 1e       	adc	r11, r19
 614:	01 2f       	mov	r16, r17
 616:	0f 76       	andi	r16, 0x6F	; 111
 618:	b7 ff       	sbrs	r27, 7
 61a:	08 c0       	rjmp	.+16     	; 0x62c <vfprintf+0x21c>
 61c:	b0 95       	com	r27
 61e:	a0 95       	com	r26
 620:	90 95       	com	r25
 622:	81 95       	neg	r24
 624:	9f 4f       	sbci	r25, 0xFF	; 255
 626:	af 4f       	sbci	r26, 0xFF	; 255
 628:	bf 4f       	sbci	r27, 0xFF	; 255
 62a:	00 68       	ori	r16, 0x80	; 128
 62c:	bc 01       	movw	r22, r24
 62e:	cd 01       	movw	r24, r26
 630:	a2 01       	movw	r20, r4
 632:	2a e0       	ldi	r18, 0x0A	; 10
 634:	30 e0       	ldi	r19, 0x00	; 0
 636:	0e 94 28 04 	call	0x850	; 0x850 <__ultoa_invert>
 63a:	d8 2e       	mov	r13, r24
 63c:	d4 18       	sub	r13, r4
 63e:	3f c0       	rjmp	.+126    	; 0x6be <vfprintf+0x2ae>
 640:	85 37       	cpi	r24, 0x75	; 117
 642:	21 f4       	brne	.+8      	; 0x64c <vfprintf+0x23c>
 644:	1f 7e       	andi	r17, 0xEF	; 239
 646:	2a e0       	ldi	r18, 0x0A	; 10
 648:	30 e0       	ldi	r19, 0x00	; 0
 64a:	20 c0       	rjmp	.+64     	; 0x68c <vfprintf+0x27c>
 64c:	19 7f       	andi	r17, 0xF9	; 249
 64e:	8f 36       	cpi	r24, 0x6F	; 111
 650:	a9 f0       	breq	.+42     	; 0x67c <vfprintf+0x26c>
 652:	80 37       	cpi	r24, 0x70	; 112
 654:	20 f4       	brcc	.+8      	; 0x65e <vfprintf+0x24e>
 656:	88 35       	cpi	r24, 0x58	; 88
 658:	09 f0       	breq	.+2      	; 0x65c <vfprintf+0x24c>
 65a:	ae c0       	rjmp	.+348    	; 0x7b8 <vfprintf+0x3a8>
 65c:	0b c0       	rjmp	.+22     	; 0x674 <vfprintf+0x264>
 65e:	80 37       	cpi	r24, 0x70	; 112
 660:	21 f0       	breq	.+8      	; 0x66a <vfprintf+0x25a>
 662:	88 37       	cpi	r24, 0x78	; 120
 664:	09 f0       	breq	.+2      	; 0x668 <vfprintf+0x258>
 666:	a8 c0       	rjmp	.+336    	; 0x7b8 <vfprintf+0x3a8>
 668:	01 c0       	rjmp	.+2      	; 0x66c <vfprintf+0x25c>
 66a:	10 61       	ori	r17, 0x10	; 16
 66c:	14 ff       	sbrs	r17, 4
 66e:	09 c0       	rjmp	.+18     	; 0x682 <vfprintf+0x272>
 670:	14 60       	ori	r17, 0x04	; 4
 672:	07 c0       	rjmp	.+14     	; 0x682 <vfprintf+0x272>
 674:	14 ff       	sbrs	r17, 4
 676:	08 c0       	rjmp	.+16     	; 0x688 <vfprintf+0x278>
 678:	16 60       	ori	r17, 0x06	; 6
 67a:	06 c0       	rjmp	.+12     	; 0x688 <vfprintf+0x278>
 67c:	28 e0       	ldi	r18, 0x08	; 8
 67e:	30 e0       	ldi	r19, 0x00	; 0
 680:	05 c0       	rjmp	.+10     	; 0x68c <vfprintf+0x27c>
 682:	20 e1       	ldi	r18, 0x10	; 16
 684:	30 e0       	ldi	r19, 0x00	; 0
 686:	02 c0       	rjmp	.+4      	; 0x68c <vfprintf+0x27c>
 688:	20 e1       	ldi	r18, 0x10	; 16
 68a:	32 e0       	ldi	r19, 0x02	; 2
 68c:	f5 01       	movw	r30, r10
 68e:	17 ff       	sbrs	r17, 7
 690:	07 c0       	rjmp	.+14     	; 0x6a0 <vfprintf+0x290>
 692:	60 81       	ld	r22, Z
 694:	71 81       	ldd	r23, Z+1	; 0x01
 696:	82 81       	ldd	r24, Z+2	; 0x02
 698:	93 81       	ldd	r25, Z+3	; 0x03
 69a:	44 e0       	ldi	r20, 0x04	; 4
 69c:	50 e0       	ldi	r21, 0x00	; 0
 69e:	06 c0       	rjmp	.+12     	; 0x6ac <vfprintf+0x29c>
 6a0:	60 81       	ld	r22, Z
 6a2:	71 81       	ldd	r23, Z+1	; 0x01
 6a4:	80 e0       	ldi	r24, 0x00	; 0
 6a6:	90 e0       	ldi	r25, 0x00	; 0
 6a8:	42 e0       	ldi	r20, 0x02	; 2
 6aa:	50 e0       	ldi	r21, 0x00	; 0
 6ac:	a4 0e       	add	r10, r20
 6ae:	b5 1e       	adc	r11, r21
 6b0:	a2 01       	movw	r20, r4
 6b2:	0e 94 28 04 	call	0x850	; 0x850 <__ultoa_invert>
 6b6:	d8 2e       	mov	r13, r24
 6b8:	d4 18       	sub	r13, r4
 6ba:	01 2f       	mov	r16, r17
 6bc:	0f 77       	andi	r16, 0x7F	; 127
 6be:	06 ff       	sbrs	r16, 6
 6c0:	09 c0       	rjmp	.+18     	; 0x6d4 <vfprintf+0x2c4>
 6c2:	0e 7f       	andi	r16, 0xFE	; 254
 6c4:	df 14       	cp	r13, r15
 6c6:	30 f4       	brcc	.+12     	; 0x6d4 <vfprintf+0x2c4>
 6c8:	04 ff       	sbrs	r16, 4
 6ca:	06 c0       	rjmp	.+12     	; 0x6d8 <vfprintf+0x2c8>
 6cc:	02 fd       	sbrc	r16, 2
 6ce:	04 c0       	rjmp	.+8      	; 0x6d8 <vfprintf+0x2c8>
 6d0:	0f 7e       	andi	r16, 0xEF	; 239
 6d2:	02 c0       	rjmp	.+4      	; 0x6d8 <vfprintf+0x2c8>
 6d4:	1d 2d       	mov	r17, r13
 6d6:	01 c0       	rjmp	.+2      	; 0x6da <vfprintf+0x2ca>
 6d8:	1f 2d       	mov	r17, r15
 6da:	80 2f       	mov	r24, r16
 6dc:	90 e0       	ldi	r25, 0x00	; 0
 6de:	04 ff       	sbrs	r16, 4
 6e0:	0c c0       	rjmp	.+24     	; 0x6fa <vfprintf+0x2ea>
 6e2:	fe 01       	movw	r30, r28
 6e4:	ed 0d       	add	r30, r13
 6e6:	f1 1d       	adc	r31, r1
 6e8:	20 81       	ld	r18, Z
 6ea:	20 33       	cpi	r18, 0x30	; 48
 6ec:	11 f4       	brne	.+4      	; 0x6f2 <vfprintf+0x2e2>
 6ee:	09 7e       	andi	r16, 0xE9	; 233
 6f0:	09 c0       	rjmp	.+18     	; 0x704 <vfprintf+0x2f4>
 6f2:	02 ff       	sbrs	r16, 2
 6f4:	06 c0       	rjmp	.+12     	; 0x702 <vfprintf+0x2f2>
 6f6:	1e 5f       	subi	r17, 0xFE	; 254
 6f8:	05 c0       	rjmp	.+10     	; 0x704 <vfprintf+0x2f4>
 6fa:	86 78       	andi	r24, 0x86	; 134
 6fc:	90 70       	andi	r25, 0x00	; 0
 6fe:	00 97       	sbiw	r24, 0x00	; 0
 700:	09 f0       	breq	.+2      	; 0x704 <vfprintf+0x2f4>
 702:	1f 5f       	subi	r17, 0xFF	; 255
 704:	80 2e       	mov	r8, r16
 706:	99 24       	eor	r9, r9
 708:	03 fd       	sbrc	r16, 3
 70a:	12 c0       	rjmp	.+36     	; 0x730 <vfprintf+0x320>
 70c:	00 ff       	sbrs	r16, 0
 70e:	0d c0       	rjmp	.+26     	; 0x72a <vfprintf+0x31a>
 710:	fd 2c       	mov	r15, r13
 712:	1e 15       	cp	r17, r14
 714:	50 f4       	brcc	.+20     	; 0x72a <vfprintf+0x31a>
 716:	fe 0c       	add	r15, r14
 718:	f1 1a       	sub	r15, r17
 71a:	1e 2d       	mov	r17, r14
 71c:	06 c0       	rjmp	.+12     	; 0x72a <vfprintf+0x31a>
 71e:	80 e2       	ldi	r24, 0x20	; 32
 720:	90 e0       	ldi	r25, 0x00	; 0
 722:	b3 01       	movw	r22, r6
 724:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <fputc>
 728:	1f 5f       	subi	r17, 0xFF	; 255
 72a:	1e 15       	cp	r17, r14
 72c:	c0 f3       	brcs	.-16     	; 0x71e <vfprintf+0x30e>
 72e:	04 c0       	rjmp	.+8      	; 0x738 <vfprintf+0x328>
 730:	1e 15       	cp	r17, r14
 732:	10 f4       	brcc	.+4      	; 0x738 <vfprintf+0x328>
 734:	e1 1a       	sub	r14, r17
 736:	01 c0       	rjmp	.+2      	; 0x73a <vfprintf+0x32a>
 738:	ee 24       	eor	r14, r14
 73a:	84 fe       	sbrs	r8, 4
 73c:	0f c0       	rjmp	.+30     	; 0x75c <vfprintf+0x34c>
 73e:	80 e3       	ldi	r24, 0x30	; 48
 740:	90 e0       	ldi	r25, 0x00	; 0
 742:	b3 01       	movw	r22, r6
 744:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <fputc>
 748:	82 fe       	sbrs	r8, 2
 74a:	1f c0       	rjmp	.+62     	; 0x78a <vfprintf+0x37a>
 74c:	81 fe       	sbrs	r8, 1
 74e:	03 c0       	rjmp	.+6      	; 0x756 <vfprintf+0x346>
 750:	88 e5       	ldi	r24, 0x58	; 88
 752:	90 e0       	ldi	r25, 0x00	; 0
 754:	10 c0       	rjmp	.+32     	; 0x776 <vfprintf+0x366>
 756:	88 e7       	ldi	r24, 0x78	; 120
 758:	90 e0       	ldi	r25, 0x00	; 0
 75a:	0d c0       	rjmp	.+26     	; 0x776 <vfprintf+0x366>
 75c:	c4 01       	movw	r24, r8
 75e:	86 78       	andi	r24, 0x86	; 134
 760:	90 70       	andi	r25, 0x00	; 0
 762:	00 97       	sbiw	r24, 0x00	; 0
 764:	91 f0       	breq	.+36     	; 0x78a <vfprintf+0x37a>
 766:	81 fc       	sbrc	r8, 1
 768:	02 c0       	rjmp	.+4      	; 0x76e <vfprintf+0x35e>
 76a:	80 e2       	ldi	r24, 0x20	; 32
 76c:	01 c0       	rjmp	.+2      	; 0x770 <vfprintf+0x360>
 76e:	8b e2       	ldi	r24, 0x2B	; 43
 770:	07 fd       	sbrc	r16, 7
 772:	8d e2       	ldi	r24, 0x2D	; 45
 774:	90 e0       	ldi	r25, 0x00	; 0
 776:	b3 01       	movw	r22, r6
 778:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <fputc>
 77c:	06 c0       	rjmp	.+12     	; 0x78a <vfprintf+0x37a>
 77e:	80 e3       	ldi	r24, 0x30	; 48
 780:	90 e0       	ldi	r25, 0x00	; 0
 782:	b3 01       	movw	r22, r6
 784:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <fputc>
 788:	fa 94       	dec	r15
 78a:	df 14       	cp	r13, r15
 78c:	c0 f3       	brcs	.-16     	; 0x77e <vfprintf+0x36e>
 78e:	da 94       	dec	r13
 790:	f2 01       	movw	r30, r4
 792:	ed 0d       	add	r30, r13
 794:	f1 1d       	adc	r31, r1
 796:	80 81       	ld	r24, Z
 798:	90 e0       	ldi	r25, 0x00	; 0
 79a:	b3 01       	movw	r22, r6
 79c:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <fputc>
 7a0:	dd 20       	and	r13, r13
 7a2:	a9 f7       	brne	.-22     	; 0x78e <vfprintf+0x37e>
 7a4:	06 c0       	rjmp	.+12     	; 0x7b2 <vfprintf+0x3a2>
 7a6:	80 e2       	ldi	r24, 0x20	; 32
 7a8:	90 e0       	ldi	r25, 0x00	; 0
 7aa:	b3 01       	movw	r22, r6
 7ac:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <fputc>
 7b0:	ea 94       	dec	r14
 7b2:	ee 20       	and	r14, r14
 7b4:	c1 f7       	brne	.-16     	; 0x7a6 <vfprintf+0x396>
 7b6:	40 ce       	rjmp	.-896    	; 0x438 <vfprintf+0x28>
 7b8:	f3 01       	movw	r30, r6
 7ba:	86 81       	ldd	r24, Z+6	; 0x06
 7bc:	97 81       	ldd	r25, Z+7	; 0x07
 7be:	02 c0       	rjmp	.+4      	; 0x7c4 <vfprintf+0x3b4>
 7c0:	8f ef       	ldi	r24, 0xFF	; 255
 7c2:	9f ef       	ldi	r25, 0xFF	; 255
 7c4:	2d 96       	adiw	r28, 0x0d	; 13
 7c6:	e2 e1       	ldi	r30, 0x12	; 18
 7c8:	0c 94 a2 04 	jmp	0x944	; 0x944 <__epilogue_restores__>

000007cc <strnlen_P>:
 7cc:	fc 01       	movw	r30, r24
 7ce:	05 90       	lpm	r0, Z+
 7d0:	61 50       	subi	r22, 0x01	; 1
 7d2:	70 40       	sbci	r23, 0x00	; 0
 7d4:	01 10       	cpse	r0, r1
 7d6:	d8 f7       	brcc	.-10     	; 0x7ce <strnlen_P+0x2>
 7d8:	80 95       	com	r24
 7da:	90 95       	com	r25
 7dc:	8e 0f       	add	r24, r30
 7de:	9f 1f       	adc	r25, r31
 7e0:	08 95       	ret

000007e2 <strnlen>:
 7e2:	fc 01       	movw	r30, r24
 7e4:	61 50       	subi	r22, 0x01	; 1
 7e6:	70 40       	sbci	r23, 0x00	; 0
 7e8:	01 90       	ld	r0, Z+
 7ea:	01 10       	cpse	r0, r1
 7ec:	d8 f7       	brcc	.-10     	; 0x7e4 <strnlen+0x2>
 7ee:	80 95       	com	r24
 7f0:	90 95       	com	r25
 7f2:	8e 0f       	add	r24, r30
 7f4:	9f 1f       	adc	r25, r31
 7f6:	08 95       	ret

000007f8 <fputc>:
 7f8:	0f 93       	push	r16
 7fa:	1f 93       	push	r17
 7fc:	cf 93       	push	r28
 7fe:	df 93       	push	r29
 800:	8c 01       	movw	r16, r24
 802:	eb 01       	movw	r28, r22
 804:	8b 81       	ldd	r24, Y+3	; 0x03
 806:	81 ff       	sbrs	r24, 1
 808:	1b c0       	rjmp	.+54     	; 0x840 <fputc+0x48>
 80a:	82 ff       	sbrs	r24, 2
 80c:	0d c0       	rjmp	.+26     	; 0x828 <fputc+0x30>
 80e:	2e 81       	ldd	r18, Y+6	; 0x06
 810:	3f 81       	ldd	r19, Y+7	; 0x07
 812:	8c 81       	ldd	r24, Y+4	; 0x04
 814:	9d 81       	ldd	r25, Y+5	; 0x05
 816:	28 17       	cp	r18, r24
 818:	39 07       	cpc	r19, r25
 81a:	64 f4       	brge	.+24     	; 0x834 <fputc+0x3c>
 81c:	e8 81       	ld	r30, Y
 81e:	f9 81       	ldd	r31, Y+1	; 0x01
 820:	01 93       	st	Z+, r16
 822:	f9 83       	std	Y+1, r31	; 0x01
 824:	e8 83       	st	Y, r30
 826:	06 c0       	rjmp	.+12     	; 0x834 <fputc+0x3c>
 828:	e8 85       	ldd	r30, Y+8	; 0x08
 82a:	f9 85       	ldd	r31, Y+9	; 0x09
 82c:	80 2f       	mov	r24, r16
 82e:	09 95       	icall
 830:	00 97       	sbiw	r24, 0x00	; 0
 832:	31 f4       	brne	.+12     	; 0x840 <fputc+0x48>
 834:	8e 81       	ldd	r24, Y+6	; 0x06
 836:	9f 81       	ldd	r25, Y+7	; 0x07
 838:	01 96       	adiw	r24, 0x01	; 1
 83a:	9f 83       	std	Y+7, r25	; 0x07
 83c:	8e 83       	std	Y+6, r24	; 0x06
 83e:	02 c0       	rjmp	.+4      	; 0x844 <fputc+0x4c>
 840:	0f ef       	ldi	r16, 0xFF	; 255
 842:	1f ef       	ldi	r17, 0xFF	; 255
 844:	c8 01       	movw	r24, r16
 846:	df 91       	pop	r29
 848:	cf 91       	pop	r28
 84a:	1f 91       	pop	r17
 84c:	0f 91       	pop	r16
 84e:	08 95       	ret

00000850 <__ultoa_invert>:
 850:	fa 01       	movw	r30, r20
 852:	aa 27       	eor	r26, r26
 854:	28 30       	cpi	r18, 0x08	; 8
 856:	51 f1       	breq	.+84     	; 0x8ac <__ultoa_invert+0x5c>
 858:	20 31       	cpi	r18, 0x10	; 16
 85a:	81 f1       	breq	.+96     	; 0x8bc <__ultoa_invert+0x6c>
 85c:	e8 94       	clt
 85e:	6f 93       	push	r22
 860:	6e 7f       	andi	r22, 0xFE	; 254
 862:	6e 5f       	subi	r22, 0xFE	; 254
 864:	7f 4f       	sbci	r23, 0xFF	; 255
 866:	8f 4f       	sbci	r24, 0xFF	; 255
 868:	9f 4f       	sbci	r25, 0xFF	; 255
 86a:	af 4f       	sbci	r26, 0xFF	; 255
 86c:	b1 e0       	ldi	r27, 0x01	; 1
 86e:	3e d0       	rcall	.+124    	; 0x8ec <__ultoa_invert+0x9c>
 870:	b4 e0       	ldi	r27, 0x04	; 4
 872:	3c d0       	rcall	.+120    	; 0x8ec <__ultoa_invert+0x9c>
 874:	67 0f       	add	r22, r23
 876:	78 1f       	adc	r23, r24
 878:	89 1f       	adc	r24, r25
 87a:	9a 1f       	adc	r25, r26
 87c:	a1 1d       	adc	r26, r1
 87e:	68 0f       	add	r22, r24
 880:	79 1f       	adc	r23, r25
 882:	8a 1f       	adc	r24, r26
 884:	91 1d       	adc	r25, r1
 886:	a1 1d       	adc	r26, r1
 888:	6a 0f       	add	r22, r26
 88a:	71 1d       	adc	r23, r1
 88c:	81 1d       	adc	r24, r1
 88e:	91 1d       	adc	r25, r1
 890:	a1 1d       	adc	r26, r1
 892:	20 d0       	rcall	.+64     	; 0x8d4 <__ultoa_invert+0x84>
 894:	09 f4       	brne	.+2      	; 0x898 <__ultoa_invert+0x48>
 896:	68 94       	set
 898:	3f 91       	pop	r19
 89a:	2a e0       	ldi	r18, 0x0A	; 10
 89c:	26 9f       	mul	r18, r22
 89e:	11 24       	eor	r1, r1
 8a0:	30 19       	sub	r19, r0
 8a2:	30 5d       	subi	r19, 0xD0	; 208
 8a4:	31 93       	st	Z+, r19
 8a6:	de f6       	brtc	.-74     	; 0x85e <__ultoa_invert+0xe>
 8a8:	cf 01       	movw	r24, r30
 8aa:	08 95       	ret
 8ac:	46 2f       	mov	r20, r22
 8ae:	47 70       	andi	r20, 0x07	; 7
 8b0:	40 5d       	subi	r20, 0xD0	; 208
 8b2:	41 93       	st	Z+, r20
 8b4:	b3 e0       	ldi	r27, 0x03	; 3
 8b6:	0f d0       	rcall	.+30     	; 0x8d6 <__ultoa_invert+0x86>
 8b8:	c9 f7       	brne	.-14     	; 0x8ac <__ultoa_invert+0x5c>
 8ba:	f6 cf       	rjmp	.-20     	; 0x8a8 <__ultoa_invert+0x58>
 8bc:	46 2f       	mov	r20, r22
 8be:	4f 70       	andi	r20, 0x0F	; 15
 8c0:	40 5d       	subi	r20, 0xD0	; 208
 8c2:	4a 33       	cpi	r20, 0x3A	; 58
 8c4:	18 f0       	brcs	.+6      	; 0x8cc <__ultoa_invert+0x7c>
 8c6:	49 5d       	subi	r20, 0xD9	; 217
 8c8:	31 fd       	sbrc	r19, 1
 8ca:	40 52       	subi	r20, 0x20	; 32
 8cc:	41 93       	st	Z+, r20
 8ce:	02 d0       	rcall	.+4      	; 0x8d4 <__ultoa_invert+0x84>
 8d0:	a9 f7       	brne	.-22     	; 0x8bc <__ultoa_invert+0x6c>
 8d2:	ea cf       	rjmp	.-44     	; 0x8a8 <__ultoa_invert+0x58>
 8d4:	b4 e0       	ldi	r27, 0x04	; 4
 8d6:	a6 95       	lsr	r26
 8d8:	97 95       	ror	r25
 8da:	87 95       	ror	r24
 8dc:	77 95       	ror	r23
 8de:	67 95       	ror	r22
 8e0:	ba 95       	dec	r27
 8e2:	c9 f7       	brne	.-14     	; 0x8d6 <__ultoa_invert+0x86>
 8e4:	00 97       	sbiw	r24, 0x00	; 0
 8e6:	61 05       	cpc	r22, r1
 8e8:	71 05       	cpc	r23, r1
 8ea:	08 95       	ret
 8ec:	9b 01       	movw	r18, r22
 8ee:	ac 01       	movw	r20, r24
 8f0:	0a 2e       	mov	r0, r26
 8f2:	06 94       	lsr	r0
 8f4:	57 95       	ror	r21
 8f6:	47 95       	ror	r20
 8f8:	37 95       	ror	r19
 8fa:	27 95       	ror	r18
 8fc:	ba 95       	dec	r27
 8fe:	c9 f7       	brne	.-14     	; 0x8f2 <__ultoa_invert+0xa2>
 900:	62 0f       	add	r22, r18
 902:	73 1f       	adc	r23, r19
 904:	84 1f       	adc	r24, r20
 906:	95 1f       	adc	r25, r21
 908:	a0 1d       	adc	r26, r0
 90a:	08 95       	ret

0000090c <__prologue_saves__>:
 90c:	2f 92       	push	r2
 90e:	3f 92       	push	r3
 910:	4f 92       	push	r4
 912:	5f 92       	push	r5
 914:	6f 92       	push	r6
 916:	7f 92       	push	r7
 918:	8f 92       	push	r8
 91a:	9f 92       	push	r9
 91c:	af 92       	push	r10
 91e:	bf 92       	push	r11
 920:	cf 92       	push	r12
 922:	df 92       	push	r13
 924:	ef 92       	push	r14
 926:	ff 92       	push	r15
 928:	0f 93       	push	r16
 92a:	1f 93       	push	r17
 92c:	cf 93       	push	r28
 92e:	df 93       	push	r29
 930:	cd b7       	in	r28, 0x3d	; 61
 932:	de b7       	in	r29, 0x3e	; 62
 934:	ca 1b       	sub	r28, r26
 936:	db 0b       	sbc	r29, r27
 938:	0f b6       	in	r0, 0x3f	; 63
 93a:	f8 94       	cli
 93c:	de bf       	out	0x3e, r29	; 62
 93e:	0f be       	out	0x3f, r0	; 63
 940:	cd bf       	out	0x3d, r28	; 61
 942:	09 94       	ijmp

00000944 <__epilogue_restores__>:
 944:	2a 88       	ldd	r2, Y+18	; 0x12
 946:	39 88       	ldd	r3, Y+17	; 0x11
 948:	48 88       	ldd	r4, Y+16	; 0x10
 94a:	5f 84       	ldd	r5, Y+15	; 0x0f
 94c:	6e 84       	ldd	r6, Y+14	; 0x0e
 94e:	7d 84       	ldd	r7, Y+13	; 0x0d
 950:	8c 84       	ldd	r8, Y+12	; 0x0c
 952:	9b 84       	ldd	r9, Y+11	; 0x0b
 954:	aa 84       	ldd	r10, Y+10	; 0x0a
 956:	b9 84       	ldd	r11, Y+9	; 0x09
 958:	c8 84       	ldd	r12, Y+8	; 0x08
 95a:	df 80       	ldd	r13, Y+7	; 0x07
 95c:	ee 80       	ldd	r14, Y+6	; 0x06
 95e:	fd 80       	ldd	r15, Y+5	; 0x05
 960:	0c 81       	ldd	r16, Y+4	; 0x04
 962:	1b 81       	ldd	r17, Y+3	; 0x03
 964:	aa 81       	ldd	r26, Y+2	; 0x02
 966:	b9 81       	ldd	r27, Y+1	; 0x01
 968:	ce 0f       	add	r28, r30
 96a:	d1 1d       	adc	r29, r1
 96c:	0f b6       	in	r0, 0x3f	; 63
 96e:	f8 94       	cli
 970:	de bf       	out	0x3e, r29	; 62
 972:	0f be       	out	0x3f, r0	; 63
 974:	cd bf       	out	0x3d, r28	; 61
 976:	ed 01       	movw	r28, r26
 978:	08 95       	ret

0000097a <_exit>:
 97a:	f8 94       	cli

0000097c <__stop_program>:
 97c:	ff cf       	rjmp	.-2      	; 0x97c <__stop_program>
